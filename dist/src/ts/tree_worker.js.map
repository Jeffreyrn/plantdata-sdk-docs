{"version":3,"sources":["tree_worker.ts"],"names":[],"mappings":"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","file":"tree_worker.js","sourcesContent":["// @ts-ignore\r\nimportScripts('../../assets/lodash.min.js');\r\n\r\n(function () {\r\n    let num = 1;\r\n    let resultMap = {};\r\n    let menuItemUrlMap = {};\r\n    let menuItemMap = {};\r\n    let allMenuItems: any[] = [];\r\n    const startTime = new Date().getTime();\r\n    onmessage = (e) => {\r\n        let treeData = handleData(e.data);\r\n        createMenuItemPid(treeData);\r\n        buildMenuItemUrlMap();\r\n        let html = createMenuItemHTMLStr(treeData);\r\n        // @ts-ignore\r\n        postMessage({html, allMenuItems, menuItemUrlMap});\r\n    };\r\n\r\n    function calcUseTime() {\r\n        return (new Date().getTime() - startTime) / 1000\r\n    }\r\n\r\n    function buildAllMenuItems(item: any) {\r\n        allMenuItems.push(item);\r\n        if (item.children) {\r\n            for (let it of item.children) {\r\n                buildAllMenuItems(it)\r\n            }\r\n        }\r\n    }\r\n\r\n    function buildMenuItemUrl(data: any) {\r\n        let path = '';\r\n        let name = data.name.toLocaleLowerCase();\r\n        switch (data.kindString.toLocaleLowerCase()) {\r\n            case 'class':\r\n                path = 'classes/' + name + '.html';\r\n                break;\r\n            case 'interface':\r\n                path = 'interfaces/' + name + '.html';\r\n                break;\r\n            case 'type alias':\r\n                path = 'globals.html#' + name;\r\n                break;\r\n            case 'property':\r\n            case 'variable':\r\n            case 'method':\r\n            case 'constructor':\r\n            case 'function':\r\n            case 'object literal':\r\n                path = menuItemUrlMap[data.pid];\r\n                if (path) {\r\n                    if (path.indexOf('#') < 0) {\r\n                        path = path + '#' + name\r\n                    }\r\n                } else {\r\n                    path = buildMenuItemUrl(findMenuItemById(data.pid));\r\n                }\r\n                break;\r\n            case '':\r\n                path = 'index.html';\r\n                break;\r\n            default:\r\n                console.error('unknow type ========> ', data.kindString);\r\n                path = 'index.html';\r\n                break;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function buildMenuItemUrlMap() {\r\n        let noId = _.filter(allMenuItems, (n: any) => {\r\n            return !n.id;\r\n        });\r\n        let allUniq = _.uniqBy(allMenuItems, 'id');\r\n        allUniq = _.filter(allUniq, (n: any) => {\r\n            return n.id;\r\n        });\r\n        let data = _.concat(noId, allUniq);\r\n        // let allLength = data.length;\r\n        // let now = 0;\r\n        for (let item of data) {\r\n            menuItemUrlMap[item.id] = buildMenuItemUrl(item);\r\n            menuItemMap[item.id] = item;\r\n            // console.log(now ++ / allLength)\r\n        }\r\n    }\r\n\r\n    function createMenuItemHTMLStr(treeData: any) {\r\n        let lis = createSubMenuItemHTMLStr(treeData);\r\n        return `<ul>${lis}</ul>`;\r\n    }\r\n\r\n    function createSubMenuItemHTMLStr(data: any[], level = 1, parentPath = '') {\r\n        let li = ``;\r\n        for (let item of data) {\r\n            let ul = '';\r\n            let subText = '';\r\n            let arrow = '<i></i>';\r\n            let cls = 'last';\r\n            let children = item.children;\r\n            subText = getSubText(item);\r\n            let path = menuItemUrlMap[item.id];\r\n            if (!path) {\r\n                path = menuItemUrlMap[item.id] = buildMenuItemUrl(item);\r\n            }\r\n            if (parentPath && path.indexOf(parentPath) !== 0) {\r\n                let selfFileName = getFileNameById(item.id);\r\n                let parentFileName = getFileNameById(item.pid);\r\n                if (selfFileName !== parentFileName) {\r\n                    if (path.indexOf('#') > 0) {\r\n                        path = path.split('#')[0] + '?ref=' + encodeURIComponent(parentPath) + '#' + path.split('#')[1];\r\n                    } else {\r\n                        // path = path + '?ref=' + encodeURIComponent(parentPath)\r\n                    }\r\n                }\r\n            }\r\n            if (children && children.length) {\r\n                let items = createSubMenuItemHTMLStr(children, level + 1, path);\r\n                ul = `<ul>${items}</ul>`;\r\n                arrow = '<i class=\"ic-chevron-right pdui-font\"></i>';\r\n                cls = 'has-children';\r\n            }\r\n            let typeClass = item.kindString ? 'tsd-kind-' + item.kindString.toLocaleLowerCase().replace(' ', '-') : '';\r\n            cls += ' ' + getClass(item.flags) + (item.inheritedFrom ? ' isInherited' : '');\r\n            li += `<li class=\"li ${level > 1 ? 'closed' : 'open'} ${typeClass}\" level=\"${level}\">\r\n                        <div class=\"li-con tsd-kind-icon ${cls}\" data-id=\"${item.id || ''}\"\r\n                            data-pid=\"${item.pid || ''}\" data-name=\"${item.name.toLocaleLowerCase()}\" data-path=\"${path}\">\r\n                            ${arrow}\r\n                            <div class=\"name\">${item.name}</div>\r\n                            <div class=\"text\" title=\"${subText.replace(/\\\"/, '&quot;')}\">${subText}</div>\r\n                        </div>\r\n                        ${ul}\r\n                    </li>`;\r\n        }\r\n        return li;\r\n    }\r\n\r\n    function createMenuItemPid(data: any[], level = 1, pid = 0, reference = false) {\r\n        for (let item of data) {\r\n            let children = item.children;\r\n            if (!children) {\r\n                children = getSubMenuItems(item);\r\n                if (children.length) {\r\n                    item.children = children;\r\n                    for (let it of children) {\r\n                        buildAllMenuItems(it);\r\n                    }\r\n                }\r\n            }\r\n            if (!reference) {\r\n                item.pid = pid;\r\n            }\r\n            let isReference = item.type && item.type.type === 'reference' && item.type.id;\r\n            if ((!children || !children.length) && isReference) {\r\n                let obj = _.find(allMenuItems, ['id', item.type.id]);\r\n                if (obj.children && obj.kindString === 'Interface') {\r\n                    if (false && isRecursed(item, obj.id)) {\r\n                        console.error(item, obj)\r\n                    } else {\r\n                        item.children = obj.children;\r\n                        children = item.children;\r\n                    }\r\n                }\r\n            }\r\n            if (children && children.length) {\r\n                createMenuItemPid(children, level + 1, item.id, isReference);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findMenuItemById(id: any) {\r\n        return menuItemMap[id] || _.find(allMenuItems, ['id', parseInt(id, 10)]);\r\n    }\r\n\r\n    function getSubMenuItems(data: any): any[] {\r\n        try {\r\n            if (data.type.elementType.declaration.children.length) {\r\n                return _.orderBy(data.type.elementType.declaration.children, 'name', 'asc');\r\n            }\r\n        } catch (err) {\r\n        }\r\n        try {\r\n            if (data.type.declaration.children.length) {\r\n                return _.orderBy(data.type.declaration.children, 'name', 'asc');\r\n            }\r\n        } catch (err) {\r\n        }\r\n        try {\r\n            if (data.type.declaration.indexSignature) {\r\n                return getSubMenuItems(data.type.declaration.indexSignature);\r\n            }\r\n        } catch (err) {\r\n        }\r\n        return [];\r\n    }\r\n\r\n    function getClass(data: any) {\r\n        if (data) {\r\n            let className = '';\r\n            for (let key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    className += ' ' + key\r\n                }\r\n            }\r\n            return className\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    function getFileNameById(id: any) {\r\n        let data = findMenuItemById(id);\r\n        if (data) {\r\n            return data.sources[0].fileName;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    function getIndexSignature(indexSignature: any) {\r\n        let subText = '';\r\n        if (indexSignature.parameters.length === 1) {\r\n            let key = indexSignature.parameters[0].name;\r\n            let keyType = indexSignature.parameters[0].type.name;\r\n            let valueType = getType(indexSignature.type, indexSignature);\r\n            let optional = isOptional(indexSignature.parameters[0]);\r\n            subText = `{ [${key}: ${keyType}]${optional}: ${valueType} }`;\r\n        } else {\r\n            console.error('unknow indexSignature', indexSignature);\r\n        }\r\n        return subText;\r\n    }\r\n\r\n    function getReflection(reflection: any) {\r\n        let subText = '';\r\n        if (reflection.kindString === 'Type literal') {\r\n            if (reflection.children) {\r\n                let a = _.map(reflection.children, (o: any) => {\r\n                    // TODO value function ?\r\n                    let value = getType(o.type, o);\r\n                    return `${o.name}: ${value}`;\r\n                });\r\n                return `{${a.join(', ')}}`;\r\n            } else if (reflection.indexSignature) {\r\n                return getIndexSignature(reflection.indexSignature);\r\n            } else if (reflection.signatures) {\r\n                return getSignatures(reflection.signatures);\r\n            } else {\r\n                // TODO\r\n                // console.warn('unknow reflection', reflection);\r\n                subText = 'any';\r\n            }\r\n        } else {\r\n            console.error('unknow reflection', reflection);\r\n        }\r\n        return subText;\r\n    }\r\n\r\n    function getSignatures(signatures: any, data?: any) {\r\n        let subText = '';\r\n        if (signatures.length === 1) {\r\n            let signature = signatures[0];\r\n            if (signature.parameters) {\r\n                let parameters = getParameters(signature.parameters);\r\n                subText = `(${parameters.join(', ')})`;\r\n            } else {\r\n                subText = '()'\r\n            }\r\n            // TODO\r\n            if (signature.type.type && signature.type.type === 'reflection') {\r\n                subText += ' => ' + getVariable(signature.type);\r\n                data.children = signature.type.declaration.children;\r\n            } else {\r\n                subText += ' => ' + getType(signature.type, signature);\r\n            }\r\n        } else {\r\n            console.error('unknow signatures', signatures)\r\n        }\r\n        return subText;\r\n    }\r\n\r\n    function getSubText(data: any) {\r\n        let subText = '';\r\n        let type = data.kindString;\r\n        if (type === 'Property' || type === 'Variable' || type === 'Type alias') {\r\n            subText = getType(data.type, data);\r\n            return returnData(subText, data)\r\n        } else if (type === 'Call signature') {\r\n            subText = getType(data.type, data);\r\n            return returnData(subText, data)\r\n        } else if (type === 'Method' || type === 'Constructor') {\r\n            subText = getSignatures(data.signatures, data);\r\n            return returnData(subText, data)\r\n        } else if (type === 'Function') {\r\n            subText = getSignatures(data.signatures, data) || 'Function';\r\n            return returnData(subText, data)\r\n        } else if (type === 'Object literal') {\r\n            subText = '';\r\n            if (data.children && data.children.length) {\r\n                subText = '{...}';\r\n            } else {\r\n                console.error('unknow Object', data)\r\n            }\r\n            return returnData(subText, data)\r\n        } else if (type === 'Interface' || type === 'Class') {\r\n            return type\r\n        } else if (type === 'Constructor signature') {\r\n            console.log(data);\r\n            return type\r\n        } else {\r\n            if (type) {\r\n                console.log(data)\r\n            }\r\n            return type\r\n        }\r\n    }\r\n\r\n    function getType(type: any, data?: any) {\r\n        if (data) {\r\n            try {\r\n                if (data.type.elementType.declaration.children.length) {\r\n                    // data.children = _.orderBy(data.type.elementType.declaration.children, 'name', 'asc');\r\n                    // for (let it of data.children) {\r\n                    //     buildAllMenuItems(it);\r\n                    // }\r\n                    return '{...}';\r\n                }\r\n            } catch (err) {\r\n            }\r\n            try {\r\n                if (data.type.declaration.children.length) {\r\n                    // data.children = _.orderBy(data.type.declaration.children, 'name', 'asc');\r\n                    // for (let it of data.children) {\r\n                    //     buildAllMenuItems(it);\r\n                    // }\r\n                    // TODO\r\n                    // return '{...}';\r\n                }\r\n            } catch (err) {\r\n            }\r\n        }\r\n        return getVariable(type);\r\n    }\r\n\r\n    function getParameters(parameters: any[]) {\r\n        return _.map(parameters, (o: any) => {\r\n            let type = getType(o.type);\r\n            return `${o.name}${isOptional(o)}: ${type}`;\r\n        });\r\n    }\r\n\r\n    function getVariable(variable: any) {\r\n        // TODO defaultValue\r\n        let subText = '';\r\n        let type = variable.type;\r\n        if (type === 'array') {\r\n            if (variable.elementType.name && variable.elementType.name === 'undefined') {\r\n                subText = '[]'\r\n            } else {\r\n                subText = getType(variable.elementType, variable) + '[]';\r\n            }\r\n        } else {\r\n            if (variable.name) {\r\n                if (type !== 'intrinsic' && type !== 'reference' && type !== 'typeParameter') {\r\n                    // console.warn('unknow variableType', variable)\r\n                }\r\n                subText = variable.name;\r\n                if (subText === 'Array' && variable.typeArguments) {\r\n                    if (variable.typeArguments.length === 1) {\r\n                        subText = getType(variable.typeArguments[0], variable) + '[]';\r\n                    } else {\r\n                        console.error(variable)\r\n                    }\r\n                }\r\n            } else if (variable.value) {\r\n                subText = variable.value;\r\n                if (type === 'stringLiteral') {\r\n                    subText = '\\'' + subText + '\\'';\r\n                }\r\n                if (type !== 'stringLiteral') {\r\n                    console.warn('unknow variableType', variable)\r\n                }\r\n            } else if (variable.value === '') {\r\n                if (type !== 'stringLiteral') {\r\n                    console.warn('unknow variableType', variable)\r\n                }\r\n                subText = '\\'\\'';\r\n            } else {\r\n                if (type === 'reflection') {\r\n                    subText = getReflection(variable.declaration);\r\n                } else if (type === 'union') {\r\n                    let unionValue = _.map(variable.types, (o: any) => {\r\n                        return getVariable(o)\r\n                    });\r\n                    subText = unionValue.join(' | ');\r\n                } else if (type === 'tuple') {\r\n                    let a = _.map(variable.elements, 'name');\r\n                    subText = `[${a.join(', ')}]`;\r\n                } else {\r\n                    console.error('unknow variable', variable)\r\n                }\r\n            }\r\n        }\r\n        return subText;\r\n    }\r\n\r\n    function handleData(data: any) {\r\n        let trData: any[] = [];\r\n        for (let item of data.children) {\r\n            let fileName = item.sources[0].fileName;\r\n            let fileNamePrefix = fileName.split('/')[0];\r\n            let flag = true;\r\n            for (let it of trData) {\r\n                if (it.name === fileNamePrefix) {\r\n                    flag = false\r\n                }\r\n            }\r\n            if (flag) {\r\n                trData.push({\r\n                    name: fileNamePrefix,\r\n                    kindString: '',\r\n                    children: []\r\n                })\r\n            }\r\n            if (item.kindString === 'Class') {\r\n                for (let it of trData) {\r\n                    if (it.name === fileNamePrefix) {\r\n                        it.children.push(item)\r\n                    }\r\n                }\r\n            } else {\r\n                for (let it of trData) {\r\n                    if (it.name === fileNamePrefix) {\r\n                        for (let subIt of it.children) {\r\n                            if (subIt.sources[0].fileName === fileName) {\r\n                                if (!subIt.children) {\r\n                                    subIt.children = []\r\n                                }\r\n                                subIt.children.push(item)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        trData = orderBy(trData);\r\n        for (let it of trData) {\r\n            buildAllMenuItems(it);\r\n        }\r\n        return trData;\r\n    }\r\n\r\n    function isOptional(o: any) {\r\n        return o.flags && o.flags.isOptional ? '?' : ''\r\n    }\r\n\r\n    function isRecursed(item: any, id: number): boolean {\r\n        if (item.id === id) {\r\n            return true;\r\n        } else {\r\n            let obj = _.find(allMenuItems, ['id', item.pid]);\r\n            return obj ? isRecursed(obj, id) : false;\r\n        }\r\n    }\r\n\r\n    function orderBy(data: any[]) {\r\n        for (let item of data) {\r\n            if (item.children && item.children.length) {\r\n                item.children = orderBy(item.children)\r\n            }\r\n        }\r\n        return _.orderBy(data, 'name', 'asc');\r\n    }\r\n\r\n    function returnData(subText: any, data: any) {\r\n        if (subText) {\r\n            if (resultMap[subText]) {\r\n                resultMap[subText].push(data)\r\n            } else {\r\n                resultMap[subText] = [data]\r\n            }\r\n            // console.log('%c' + subText, 'color:green', data);\r\n            return subText\r\n        } else {\r\n            console.error(data);\r\n            return data.kindString\r\n        }\r\n    }\r\n})();\r\n"]}